Doctest for function that divides a matrix
------------------------------------------


    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


    >>> matrix_divided([[1, 2], [3, 4]], 3)
    [[0.33, 0.67], [1.0, 1.33]]


    >>> matrix_divided([[3, 9], [12, 15]], -3)
    [[-1.0, -3.0], [-4.0, -5.0]]


    >>> matrix_divided([[1, 2], [3, 4]], "3")
    Traceback (most recent call last):
    ...
    TypeError: div must be a numbers


    >>> matrix_divided([[3]], 3)
    [[1.0]]


    >>> matrix_divided([[3, 9], [12, 15]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero


    >>> matrix_divided([[3, 9], [12, 15, 3]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size


    >>> matrix_divided([[3, "9"], [15, 3]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


    >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]


    >>> matrix_divided([[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'